############################################################################
############################################################################
####
####
####  THIS FILE CONTAINS THE WORKFLOW TO DEPLOY TO THE TEST WEBSITE
####
####  DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING
####
####
#############################################################################
#############################################################################
name: Deploy PREVIEW Site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#permissions:
#  contents: read
#  pages: write
#  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  prepare:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip
          python3 -m pip -V

      - name: Get pip cache dir
        id: pip-cache
        run: echo "PIP_CACHE_DIR=$(pip cache dir)" | tee -a "${GITHUB_OUTPUT}"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./requirements.txt

      - name: Override home for announcement on test-site
        run: mv material/overrides/main.html.test material/overrides/main.html

      - run: mkdocs build --config-file ./mkdocs.yml

      - run: mkauthdocs maas mobidrom site/ --heading "Login to Maas NRW Wiki Demo Site"

      - uses: actions/upload-artifact@v3
        with:
          name: website
          path: site/

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: mkdocs-wiki-test.roeglin-data.de
          protocol: ftps
          username: mkdocs-wiki-test
          password: ${{ secrets.ftps_password }}
          local-dir: site/

  deploy-test:
    runs-on: ubuntu-22.04
    env: 
      CI_COMMIT_MESSAGE: Preview Website Rendered by MkDocs
      CI_COMMIT_AUTHOR: Continuous Integration    
    needs: prepare
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: website
        path: site/

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
        publish_branch: preview-site
        #force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'   
        full_commit_message: 'Build from ${{ GITHUB_SHA::12 }} - ${{ github.event.head_commit.message }}'

#    - name: Push to preview branch
#      run: |
#        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
#        git config --global user.email "username@users.noreply.github.com"
#        git add site -f
#        git commit -a -m "Build from ${GITHUB_SHA::12}"
#        git push -f origin HEAD:preview-site

    - name: ðŸ“‚ Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: mkdocs-wiki-test.roeglin-data.de
        protocol: ftps
        username: mkdocs-wiki-test
        password: ${{ secrets.ftps_password }}
        local-dir: site/