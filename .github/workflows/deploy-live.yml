############################################################################
############################################################################
####
####
####  THIS FILE CONTAINS THE WORKFLOW TO DEPLOY TO THE LIVE WEBSITE
####
####  DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING
####
####
#############################################################################
#############################################################################
name: Deploy LIVE Site

on:
  # Runs on pushes targeting the default branch
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#permissions:
#  contents: read
#  pages: write
#  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  prepare:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip
          python3 -m pip -V

      - name: Get pip cache dir
        id: pip-cache
        run: echo "PIP_CACHE_DIR=$(pip cache dir)" | tee -a "${GITHUB_OUTPUT}"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./requirements.txt

# Get rid of landing page in favor of larger top banner
#      - name: Rename index for live site
#        run: mv docs/index.md docs/index.md.test && mv docs/index.live.md docs/index.md

      - name: Rename .pages for live site
        run: mv docs/.pages docs/.pages.test && mv docs/.pages.live docs/.pages

      - run: mkdocs build --config-file ./mkdocs.yml

# No php on Cloudflare Pages
#      - run: mkauthdocs maas mobidrom site/ --heading "Login to Maas NRW Wiki Demo Site"

      - uses: actions/upload-artifact@v2
        with:
          name: website
          path: site/

#      - name: ðŸ“‚ Sync files
#        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
#        with:
#          server: mkdocs-wiki-test.roeglin-data.de
#          protocol: ftps
#          username: mkdocs-wiki-test
#          password: ${{ secrets.ftps_password }}
#          local-dir: site/

  deploy-live:
    runs-on: ubuntu-22.04
    needs: prepare
    environment: 'Live deployment'
    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'master'

    - uses: actions/download-artifact@v3
      with:
        name: website
        path: site/

    - name: Setup commit message for deployment
      shell: bash
      run: |

        # Get commit message from last commit
        LAST_COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
        
        echo LAST_COMMIT_MESSAGE
        echo "ORIGINAL_COMMIT_MESSAGE=$LAST_COMMIT_MESSAGE" >> $GITHUB_ENV

        # Prepare new commit message with short hash
        NEW_COMMIT_MESSAGE=$(cat << EOF
        Deploy von commit: ${GITHUB_SHA::7} - 
        ${{ LAST_COMMIT_MESSAGE }}
        EOF
        )

        # Set new commit message for environment        
        echo "MESSAGE_SHA=$NEW_COMMIT_MESSAGE" >> $GITHUB_ENV

    - name: Check commit message for deployment
      run: |
        echo ${{ env.MESSAGE_SHA }}

    - name: Deploy to live-site branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
        publish_branch: live-site
        #force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'   
        full_commit_message: '${{ env.MESSAGE_SHA }}'

    - name: Publish to Cloudflare Pages
      uses: cloudflare/wrangler-action@2.0.0
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: 552371a041f9606c85c839ef41fb65e5
        command: pages deploy --project-name=maas-nrw-wiki --env=production --branch=main site
