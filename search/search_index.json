{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Alles wichtige ist hier zu finden","text":""},{"location":"#erstellt-mit-mkdocs-und-dem-mkdocs-material-theme","title":"Erstellt mit MkDocs und dem MkDocs-Material Theme","text":"<p>  Diese Seite wurde erzeugt von MkDocs, einem ausgezeichneten Static Site Generator f\u00fcr Online-Dokumentationen. Das Design verwendet Material for MkDocs.</p> <p></p> <p>Achtung!</p> <p>Preview for internal use ons</p>"},{"location":"how-to/","title":"Einf\u00fchrung","text":"<p>Note</p> <p>Diese Webseite wird automatisch mittels MkDocs aus einem GitHub-Repository erzeugt.</p>"},{"location":"how-to/#voraussetzungen","title":"Voraussetzungen","text":"<p>Um die Kommentarfunktion benutzen zu k\u00f6nnen, \u201cIssues\u201d zu erstellen oder Texte erg\u00e4nzen oder editieren zu k\u00f6nnen ist ein Github-Account notwendig. Dieser ist grunds\u00e4tzlich erst einmal kostenlos erstellbar und damit l\u00e4sst sich die Kommentar-Funktion direkt verwenden. Um \u00c4nderungen oder Erg\u00e4nzungen auf den Seiten vornehmen zu k\u00f6nnen m\u00fcssen zun\u00e4chst von Lars R\u00f6glin Berechtigungen freigegeben werden.</p>"},{"location":"how-to/#bearbeitung-von-inhalten","title":"Bearbeitung von Inhalten","text":""},{"location":"how-to/#einfach-mit-stackedit","title":"\u201cEinfach\u201d mit StackEdit","text":"<p>Eine einfache M\u00f6glichkeit, die Seiten zu bearbeiten ist die Verwendung von StackEdit. Hierzu muss StackEdit zun\u00e4chst mit dem GitHub-Account verbunden werden.</p> <p>Note</p> <p>Wenn noch kein GitHub-Account vorhanden ist kann dieser bei diesem Schritt auch erstellt werden!</p> <p> </p> <p>Nach Verkn\u00fcpfung des Accoungs muss das entsprechende \u201cRepository\u201d noch als \u201cWorkspace\u201d eingebunden werden. Dies geschieht ebenfalls \u00fcber die Sidebar. Hierzu wird ein GitHub workspace mit den folgenden Daten angelegt:</p> <p>Repository-Daten</p> <p>Repository URL: https://github.com/PartTimeDataScientist/mkdocs-wiki-test Folder path: docs Branch: master </p> <p> </p> <p>Wenn der Workspace erfolgreich angelegt wurde k\u00f6nnen in der linken Sidebar die bestehenden Dokumente eingesehen bzw. auch neue angelegt werden: </p> <p></p> <p>Zum \u201cspeichern\u201d bzw. synchronisieren mit GitHub den \u201cSynchronisieren\u201d-Button benutzen. Die \u00c4nderungen werden zu GitHub synchronisiert und anschlie\u00dfend wird automatisch eine neue Version der Webseite erzeugt und \u201chochgeladen\u201d.</p> <p></p>"},{"location":"how-to/#einfugen-von-bildern-mit-stackedit","title":"Einf\u00fcgen von Bildern mit StackEdit","text":"<p>Bilder lassen sich bei Verwendung von StackEdit nicht einfach \u00fcber copy&amp;paste in eine Seite eingef\u00fcgt werden, sondern m\u00fcssen hierf\u00fcr zun\u00e4chst zu GitHub hochgeladen werden. Dies geht am einfachsten \u00fcber den \u201cAdd file\u201d Button im enstprechenden Ordner des Repositories. Nach dem Hochladen der Datei kann diese in StackEdit \u00fcber die relative URL (in der Regel entweder \u201cimages/filename.png\u201d oder \u201c../images/filename.png\u201d) eingebunden werden.</p>"},{"location":"how-to/#intermediate-mit-online-vscode-editor","title":"Intermediate mit Online VSCode Editor","text":"<p>Der gesamte Text des Wikis l\u00e4sst sich auch durch eine von Github bereitgestellte Online-Version von Visual Studio Code bearbeiten. Hierbei stehen die wichtigsten Funktionen von VS Code einfach im Browser zur Verf\u00fcgung. In diesem Online-Editor k\u00f6nnen mehrere Dateien gleichzeitig bearbeitet werden und in einer \u201c\u00c4nderung\u201d zusammengefasst werden. Zus\u00e4tzlich erlaubt der Editor den einfach Upload von Bilder direkt im gleichen User Interface. Um diesen Editor aufzurufen reicht es aus, in der URL des Github-Repositories das \u201c.com\u201d durch ein \u201c.dev\u201d auszutauschen. Die URL f\u00fcr das aktuelle Repository ist demnach: https://github.dev/PartTimeDataScientist/mkdocs-wiki-test</p>"},{"location":"how-to/#advanced-mit-git-und-beliebigem-editor-oder-ide","title":"\u201cAdvanced\u201d mit Git und beliebigem Editor oder IDE","text":"<p>Anwender mit Git-Kenntnissen k\u00f6nnen sich nach Freigabe der Berechtigungen das entsprechende Repository einfach klonen und lokal auf ihrem Rechner bearbeiten und \u00c4nderungen zur\u00fcck zu Github pushen.</p>"},{"location":"kontakt/","title":"Kontakt","text":"<p>\u2026</p>"},{"location":"license/","title":"Lizenz","text":"<p>MIT License</p> <p>Copyright \u00a9 2016 - 2017 Martin Donath</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"bedienung/how-to/","title":"Einf\u00fchrung","text":"<p>Note</p> <p>Diese Webseite wird automatisch mittels MkDocs aus einem GitHub-Repository erzeugt.</p>"},{"location":"bedienung/how-to/#voraussetzungen","title":"Voraussetzungen","text":"<p>Um die Kommentarfunktion benutzen zu k\u00f6nnen, \u201cIssues\u201d zu erstellen oder Texte erg\u00e4nzen oder editieren zu k\u00f6nnen ist ein Github-Account notwendig. Dieser ist grunds\u00e4tzlich erst einmal kostenlos erstellbar und damit l\u00e4sst sich die Kommentar-Funktion direkt verwenden. Um \u00c4nderungen oder Erg\u00e4nzungen auf den Seiten vornehmen zu k\u00f6nnen m\u00fcssen zun\u00e4chst von Lars R\u00f6glin Berechtigungen freigegeben werden.</p>"},{"location":"bedienung/how-to/#bearbeitung-von-inhalten","title":"Bearbeitung von Inhalten","text":""},{"location":"bedienung/how-to/#einfach-mit-stackedit","title":"\u201cEinfach\u201d mit StackEdit","text":"<p>Eine einfache M\u00f6glichkeit, die Seiten zu bearbeiten ist die Verwendung von StackEdit. Hierzu muss StackEdit zun\u00e4chst mit dem GitHub-Account verbunden werden.</p> <p>Note</p> <p>Wenn noch kein GitHub-Account vorhanden ist kann dieser bei diesem Schritt auch erstellt werden!</p> <p> </p> <p>Nach Verkn\u00fcpfung des Accoungs muss das entsprechende \u201cRepository\u201d noch als \u201cWorkspace\u201d eingebunden werden. Dies geschieht ebenfalls \u00fcber die Sidebar. Hierzu wird ein GitHub workspace mit den folgenden Daten angelegt:</p> <p>Repository-Daten</p> <p>Repository URL: https://github.com/PartTimeDataScientist/mkdocs-wiki-test Folder path: docs Branch: master </p> <p> </p> <p>Wenn der Workspace erfolgreich angelegt wurde k\u00f6nnen in der linken Sidebar die bestehenden Dokumente eingesehen bzw. auch neue angelegt werden: </p> <p></p> <p>Zum \u201cspeichern\u201d bzw. synchronisieren mit GitHub den \u201cSynchronisieren\u201d-Button benutzen. Die \u00c4nderungen werden zu GitHub synchronisiert und anschlie\u00dfend wird automatisch eine neue Version der Webseite erzeugt und \u201chochgeladen\u201d.</p> <p></p>"},{"location":"bedienung/how-to/#einfugen-von-bildern-mit-stackedit","title":"Einf\u00fcgen von Bildern mit StackEdit","text":"<p>Bilder lassen sich bei Verwendung von StackEdit nicht einfach \u00fcber copy&amp;paste in eine Seite eingef\u00fcgt werden, sondern m\u00fcssen hierf\u00fcr zun\u00e4chst zu GitHub hochgeladen werden. Dies geht am einfachsten \u00fcber den \u201cAdd file\u201d Button im enstprechenden Ordner des Repositories. Nach dem Hochladen der Datei kann diese in StackEdit \u00fcber die relative URL (in der Regel entweder \u201cimages/filename.png\u201d oder \u201c../images/filename.png\u201d) eingebunden werden.</p>"},{"location":"bedienung/how-to/#intermediate-mit-online-vscode-editor","title":"Intermediate mit Online VSCode Editor","text":"<p>Der gesamte Text des Wikis l\u00e4sst sich auch durch eine von Github bereitgestellte Online-Version von Visual Studio Code bearbeiten. Hierbei stehen die wichtigsten Funktionen von VS Code einfach im Browser zur Verf\u00fcgung. In diesem Online-Editor k\u00f6nnen mehrere Dateien gleichzeitig bearbeitet werden und in einer \u201c\u00c4nderung\u201d zusammengefasst werden. Zus\u00e4tzlich erlaubt der Editor den einfach Upload von Bilder direkt im gleichen User Interface. Um diesen Editor aufzurufen reicht es aus, in der URL des Github-Repositories das \u201c.com\u201d durch ein \u201c.dev\u201d auszutauschen. Die URL f\u00fcr das aktuelle Repository ist demnach: https://github.dev/PartTimeDataScientist/mkdocs-wiki-test</p>"},{"location":"bedienung/how-to/#advanced-mit-git-und-beliebigem-editor-oder-ide","title":"\u201cAdvanced\u201d mit Git und beliebigem Editor oder IDE","text":"<p>Anwender mit Git-Kenntnissen k\u00f6nnen sich nach Freigabe der Berechtigungen das entsprechende Repository einfach klonen und lokal auf ihrem Rechner bearbeiten und \u00c4nderungen zur\u00fcck zu Github pushen.</p>"},{"location":"bedienung/setup/","title":"Beschreibung des technischen Setups","text":""},{"location":"bedienung/setup/#executive-summary","title":"Executive Summary","text":"<p>Das MaaS-NRW-Wiki ist eine MkDocs-Website, die in einem Github-Repository liegt. Durch automatisierte (CI/CD) Prozesse (\u201cGithub Actions\u201d) wird bei \u00c4nderungen oder durch manuelles Ansto\u00dfen aus der \u201cRohversion\u201d die echte Webseite erzeugt und in das Cloudflare CDN hochgeladen.  </p> <p>Vorteile diese Setups sind:  </p> <ul> <li>Initial keine Kosten bei Github (die Limits bei den ben\u00f6tigten Github-Actions f\u00fcr Free-Accounts sind gro\u00dfz\u00fcgig)</li> <li>Initial keine Kosten f\u00fcr Hosting (die Limits bei Cloudflare f\u00fcr Free-Accounts sind gro\u00dfz\u00fcgig)</li> <li>Die L\u00f6sung ist portabel und kann z.B. bei \u00dcberschreiten der Cloudflare-Limits schnell und einfach woanders hochgeladen werden</li> <li>F\u00fcr das Hosting reicht ein sehr einfacher Webserver, weil keine Funkionalit\u00e4t wie PHP, PERL, Datenbanken, etc. ben\u00f6tigt werden</li> <li>Keine \u201caktive\u201d Website =&gt; Keine Pflege wegen Sicherheitsl\u00fccken, Software-Updates, etc. notwendig</li> </ul> <p>Nachteile dieses Setups sind:  </p> <ul> <li>Minimal h\u00f6here Lernkurve zur Bearbeitung der ersten Seite als bei einem klassischen Wiki</li> <li>Alle \u201caktiven\u201d User (f\u00fcr Kommentare oder zur Bearbeitung) ben\u00f6tigen einen Github-Account</li> </ul>"},{"location":"bedienung/setup/#deployment-setup","title":"Deployment-Setup","text":"<p>Das Deployment der Webseite ist zweistufig angelegt: 1. Bei jeder \u00c4nderung im Github-Repository wird ein Rendering durch MkDocs angesto\u00dfen und das Ergebnis auf die \u201cpreview-site\u201d branch in Github gepusht. \u00c4nderungen in dieser Branch werden von Cloudflare automatisch erkannt und die Preview-Website wird aktualisiert. Zudem erm\u00f6glicht das Pushen der gerenderten Seite in eine eigene Branch auch nochmal eine \u00dcbersicht der \u00c4nderungen zwischen den einzelnen Versionen. 1. Der Workflow zum deployen der Live-Website kann entweder manuell oder durch die Definition eines \u201cRelease\u201d ausgel\u00f6st werden. Hierdurch wird zun\u00e4chst auch das Rendering durch MkDocs angesto\u00dfen. Im Unterschied zum Preview-Deployment wird die neue Version nicht automatisch auf eine Webseite hochgeladen oder in die \u201clive-site\u201d branch gepusht, sondern dieser Teil muss vorher durch einen der (zuvor definierten) berechtigten User freigegeben werden. Diese wird bei Github durch die Verwendung eines \u201cEnvironments\u201d festgelegt, das auch den API-Key f\u00fcr Cloudflare enth\u00e4lt. So ist sichergestellt, das niemand ohne Review die Live-Website aktualisieren kann. Es w\u00e4re zwar m\u00f6glich den Workflow so abzu\u00e4ndern, das eine Version in die \u201clive-site\u201d Branch gepusht wird, das hat aber keinerlei \u201c\u00f6ffentliche\u201d Auswirkungen, sondern ist eigentlich vorrangig als \u201cinterne\u201d Versionshistorie vorgesehen.</p> <pre><code>flowchart TD\n    A1[\u00c4nderung im Wiki] --&gt; |MkDocs rendering| A2(Push in 'preview-site' branch)\n    A2 &lt;--&gt; |Cloudflare picks up changes| A3(Deployed preview-site)\n    A3 --&gt; A4[https://maas-nrw-wiki-preview.pages.dev]\n\n    B1[Live deployment workflow ausgel\u00f6st] --&gt;|MkDocs rendering| B2{{Review durch Auditoren}}\n    B2 --&gt; |MkDocs rendering| B3(Push in 'live-site' branch)\n    B2 --&gt; |Github Action push| B4(Deployed live-site)\n    B4 --&gt; B5[https://maas-nrw-wiki.pages.dev]        </code></pre>"},{"location":"bedienung/setup/#to-do-offene-fragen","title":"TO-DO / OFFENE FRAGEN","text":"<ul> <li>Kommentare von Preview-Site und Live-Site trennen oder auf Preview-Site beschr\u00e4nken?</li> <li>Analytics konfigurieren / abschalten: hilfreich / nicht hilfreich</li> <li>Review der Einstellungen f\u00fcr die Github-Action \u201ccommit messages\u201d f\u00fcr live-site push</li> <li>Google-Fonts selber integrieren</li> <li>Juristische Bewertung der DSGVO-Situation bei Cloudflare Link</li> <li> <p>Cloudflare ist klassisches \u201cJAMStack\u201d hosting</p> <ul> <li>Hier kann nicht einfach per php ein simples Passwort abgefragt werden</li> <li>Mit Cloudflare \u201cAccess\u201d k\u00f6nnten f\u00fcr maximal 50 Benutzer (f\u00fcr alle vom gleichen Benutzer eingerichteten Websites) Zugriffsbeschr\u00e4nkungen eingerichtet werden</li> <li>Ansonsten ist die Preview-Site nur durch \u201cSecurity by Obscurity\u201d gesch\u00fctzt</li> </ul> </li> </ul>"},{"location":"examples/","title":"MaaS-Baukasten","text":""},{"location":"examples/#versionsbeschreibung","title":"Versionsbeschreibung","text":"<p>Achtung</p> <p>Preview-Version zum internen Gebrauch!</p> <p>Bei dem vorliegenden Dokument handelt es sich um eine Preview-Version des MaaS NRW-Baukastens lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   </p> <p>Bei dem vorliegenden Dokument handelt es sich um eine Preview-Version des MaaS NRW-Baukastens lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   </p> <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   </p>"},{"location":"examples/#einleitung","title":"Einleitung","text":""},{"location":"examples/#zielgruppe","title":"Zielgruppe","text":"<p>Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   </p> <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.   </p>"},{"location":"examples/#mobility-as-a-service-und-maas-nrw","title":"Mobility-as-a-Service und Maas NRW","text":"<p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.   </p> <p>At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur</p>"},{"location":"examples/#maas-projekte","title":"MaaS-Projekte","text":"<p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.   </p> <p>At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur</p> <p></p> <p>At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur</p>"},{"location":"extensions/admonition/","title":"Admonition","text":"<p>Admonition</p> <p>Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings.</p>"},{"location":"extensions/admonition/#installation","title":"Installation","text":"<p>Add the following lines to your <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n- admonition\n</code></pre>"},{"location":"extensions/admonition/#usage","title":"Usage","text":"<p>Admonition blocks follow a simple syntax: every block is started with <code>!!!</code>, followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces.</p> <p>Example:</p> <pre><code>!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"extensions/admonition/#changing-the-title","title":"Changing the title","text":"<p>By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier.</p> <p>Example:</p> <pre><code>!!! note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Phasellus posuere in sem ut cursus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"extensions/admonition/#removing-the-title","title":"Removing the title","text":"<p>Similar to setting a custom title, the icon and title can be omitted by providing an empty string after the type qualifier:</p> <p>Example:</p> <pre><code>!!! note \"\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"extensions/admonition/#embedded-code-blocks","title":"Embedded code blocks","text":"<p>Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those.</p> <p>However, the PyMdown Extensions package adds an extension called SuperFences, which makes it possible to nest code blocks within other blocks.</p> <p>Example:</p> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>SELECT\nEmployees.EmployeeID,\nEmployees.Name,\nEmployees.Salary,\nManager.Name AS Manager\nFROM\nEmployees\nLEFT JOIN\nEmployees AS Manager\nON\nEmployees.ManagerID = Manager.EmployeeID\nWHERE\nEmployees.EmployeeID = '087652';\n</code></pre> <p>Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.</p>"},{"location":"extensions/admonition/#types","title":"Types","text":"<p>Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers supported by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note.</p>"},{"location":"extensions/admonition/#note","title":"Note","text":"<p>Example:</p> <pre><code>!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>note</code></li> <li><code>seealso</code></li> </ul>"},{"location":"extensions/admonition/#summary","title":"Summary","text":"<p>Example:</p> <pre><code>!!! summary\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Summary</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>summary</code></li> <li><code>tldr</code></li> </ul>"},{"location":"extensions/admonition/#tip","title":"Tip","text":"<p>Example:</p> <pre><code>!!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Tip</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>tip</code></li> <li><code>hint</code></li> <li><code>important</code></li> </ul>"},{"location":"extensions/admonition/#success","title":"Success","text":"<p>Example:</p> <pre><code>!!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Success</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>success</code></li> <li><code>check</code></li> <li><code>done</code></li> </ul>"},{"location":"extensions/admonition/#warning","title":"Warning","text":"<p>Example:</p> <pre><code>!!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Warning</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>warning</code></li> <li><code>caution</code></li> <li><code>attention</code></li> </ul>"},{"location":"extensions/admonition/#failure","title":"Failure","text":"<p>Example:</p> <pre><code>!!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Failure</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>failure</code></li> <li><code>fail</code></li> <li><code>missing</code></li> </ul>"},{"location":"extensions/admonition/#danger","title":"Danger","text":"<p>Example:</p> <pre><code>!!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Danger</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>danger</code></li> <li><code>error</code></li> </ul>"},{"location":"extensions/admonition/#bug","title":"Bug","text":"<p>Example:</p> <pre><code>!!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Bug</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>bug</code></li> </ul>"},{"location":"extensions/admonition/#quote","title":"Quote","text":"<p>Example:</p> <pre><code>!!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Quote</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Qualifiers:</p> <ul> <li><code>quote</code></li> <li><code>cite</code></li> </ul>"},{"location":"extensions/codehilite/","title":"CodeHilite","text":"<p>CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. The highlighting process is executed during compilation of the Markdown file.</p> <p>Syntax highlighting not working?</p> <p>Please ensure that Pygments is installed. See the next section for further directions on how to set up Pygments or use the official Docker image with all dependencies pre-installed.</p>"},{"location":"extensions/codehilite/#installation","title":"Installation","text":"<p>CodeHilite parses code blocks and wraps them in <code>pre</code> tags. If Pygments is installed, which is a generic syntax highlighter with support for over 300 languages, CodeHilite will also highlight the code block. Pygments can be installed with the following command:</p> <pre><code>pip install pygments\n</code></pre> <p>To enable CodeHilite, add the following lines to your <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n- codehilite\n</code></pre> <p>Migrating from Material 0.2.x</p> <p>In 0.2.x the CodeHilite extension was included with <code>codehilite(css_class=code)</code> which switched the CSS class from <code>.codehilite</code> to <code>.code</code>. The current version of the theme doesn\u2019t require that and defines styles for the default <code>.codehilite</code> class, so the part <code>css_class=code</code> needs to be removed.</p>"},{"location":"extensions/codehilite/#usage","title":"Usage","text":""},{"location":"extensions/codehilite/#specifying-the-language","title":"Specifying the language","text":"<p>The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways.</p>"},{"location":"extensions/codehilite/#via-markdown-syntax-recommended","title":"via Markdown syntax recommended","text":"<p>In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language directly after the opening block.</p> <p>Example:</p> <pre><code>``` python\nimport tensorflow as tf\n```\n</code></pre> <p>Result:</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"extensions/codehilite/#via-shebang","title":"via Shebang","text":"<p>Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks.</p> <p>Example:</p> <pre><code>    #!/usr/bin/python\n    import tensorflow as tf\n</code></pre> <p>Result:</p> <pre><code>#!/usr/bin/python\nimport tensorflow as tf\n</code></pre>"},{"location":"extensions/codehilite/#via-three-colons","title":"via three colons","text":"<p>If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks.</p> <p>Example:</p> <pre><code>    :::python\n    import tensorflow as tf\n</code></pre> <p>Result:</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"extensions/codehilite/#adding-line-numbers","title":"Adding line numbers","text":"<p>Line numbers can be added by enabling the <code>linenums</code> flag in your <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n- codehilite(linenums=true)\n</code></pre> <p>Example:</p> <pre><code>``` python\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> <p>Result:</p> <pre><code>\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"extensions/codehilite/#highlighting-specific-lines","title":"Highlighting specific lines","text":"<p>Specific lines can be highlighted by passing the line numbers to the <code>hl_lines</code> argument placed right after the language identifier. Line counts start at 1.</p> <p>Example:</p> <pre><code>``` python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> <p>Result:</p> <pre><code>\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"extensions/codehilite/#supported-languages-excerpt","title":"Supported languages excerpt","text":"<p>CodeHilite uses Pygments, a generic syntax highlighter with support for over 300 languages, so the following list of examples is just an excerpt.</p>"},{"location":"extensions/codehilite/#bash","title":"Bash","text":"<pre><code>#!/bin/bash\n\nfor OPT in \"$@\"\ndo\ncase \"$OPT\" in\n'-f' )  canonicalize=1 ;;\n'-n' )  switchlf=\"-n\" ;;\nesac\ndone\n\n# readlink -f\nfunction __readlink_f {\ntarget=\"$1\"\nwhile test -n \"$target\"; do\nfilepath=\"$target\"\ncd `dirname \"$filepath\"`\ntarget=`readlink \"$filepath\"`\ndone\n/bin/echo $switchlf `pwd -P`/`basename \"$filepath\"`\n}\n\nif [ ! \"$canonicalize\" ]; then\nreadlink $switchlf \"$@\"\nelse\nfor file in \"$@\"\ndo\ncase \"$file\" in\n-* )  ;;\n*  )  __readlink_f \"$file\" ;;\nesac\ndone\nfi\n\nexit $?\n</code></pre>"},{"location":"extensions/codehilite/#c","title":"C","text":"<pre><code>extern size_t\npb_varint_scan(const uint8_t data[], size_t left) {\nassert(data &amp;&amp; left);\nleft = left &gt; 10 ? 10 : left;\n\n#ifdef __SSE2__\n\n/* Mapping: remaining bytes ==&gt; bitmask */\nstatic const int mask_map[] = {\n0x0000, 0x0001, 0x0003, 0x0007,\n0x000F, 0x001F, 0x003F, 0x007F,\n0x00FF, 0x01FF, 0x03FF\n};\n\n/* Load buffer into 128-bit integer and create high-bit mask */\n__m128i temp = _mm_loadu_si128((const __m128i *)data);\n__m128i high = _mm_set1_epi8(0x80);\n\n/* Intersect and extract mask with high-bits set */\nint mask = _mm_movemask_epi8(_mm_and_si128(temp, high));\nmask = (mask &amp; mask_map[left]) ^ mask_map[left];\n\n/* Count trailing zeroes */\nreturn mask ? __builtin_ctz(mask) + 1 : 0;\n\n#else\n\n/* Linear scan */\nsize_t size = 0;\nwhile (data[size++] &amp; 0x80)\nif (!--left)\nreturn 0;\nreturn size;\n\n#endif /* __SSE2__ */\n\n}\n</code></pre>"},{"location":"extensions/codehilite/#c_1","title":"C++","text":"<pre><code>Extension::\nExtension(const Descriptor *descriptor, const Descriptor *scope) :\ndescriptor_(descriptor),\nscope_(scope) {\n\n/* Extract full name for signature */\nvariables_[\"signature\"] = descriptor_-&gt;full_name();\n\n/* Prepare message symbol */\nvariables_[\"message\"] = StringReplace(\nvariables_[\"signature\"], \".\", \"_\", true);\nLowerString(&amp;(variables_[\"message\"]));\n\n/* Suffix scope to identifiers, if given */\nstring suffix (\"\");\nif (scope_) {\nsuffix = scope_-&gt;full_name();\n\n/* Check if the base and extension types are in the same package */\nif (!scope_-&gt;file()-&gt;package().compare(descriptor_-&gt;file()-&gt;package()))\nsuffix = StripPrefixString(suffix,\nscope_-&gt;file()-&gt;package() + \".\");\n\n/* Append to signature */\nvariables_[\"signature\"] += \".[\" + suffix +\"]\";\nsuffix = \"_\" + suffix;\n}\n\n/* Prepare extension symbol */\nvariables_[\"extension\"] = StringReplace(\nsuffix, \".\", \"_\", true);\nLowerString(&amp;(variables_[\"extension\"]));\n}\n</code></pre>"},{"location":"extensions/codehilite/#c_2","title":"C#","text":"<pre><code>public static void Send(\nSocket socket, byte[] buffer, int offset, int size, int timeout) {\nint startTickCount = Environment.TickCount;\nint sent = 0;\ndo {\nif (Environment.TickCount &gt; startTickCount + timeout)\nthrow new Exception(\"Timeout.\");\ntry {\nsent += socket.Send(buffer, offset + sent,\nsize - sent, SocketFlags.None);\n} catch (SocketException ex) {\nif (ex.SocketErrorCode == SocketError.WouldBlock ||\nex.SocketErrorCode == SocketError.IOPending ||\nex.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {\n/* Socket buffer is probably full, wait and try again */\nThread.Sleep(30);\n} else {\nthrow ex;\n}\n}\n} while (sent &lt; size);\n}\n</code></pre>"},{"location":"extensions/codehilite/#clojure","title":"Clojure","text":"<pre><code>(clojure-version)\n\n(defn partition-when\n[f]\n(fn [rf]\n(let [a (java.util.ArrayList.)\nfval (volatile! false)]\n(fn\n([] (rf))\n([result]\n(let [result (if (.isEmpty a)\nresult\n(let [v (vec (.toArray a))]\n;; Clear first\n(.clear a)\n(unreduced (rf result v))))]\n(rf result)))\n([result input]\n(if-not (and (f input)  @fval)\n(do\n(vreset! fval true)\n(.add a input)\nresult)\n(let [v (vec (.toArray a))]\n(.clear a)\n(let [ret (rf result v)]\n(when-not (reduced? ret)\n(.add a input))\nret))))))))\n\n\n(into [] (partition-when\n#(.startsWith % \"&gt;&gt;\"))\n[\"1d\" \"33\" \"&gt;&gt; 1\" \"&gt;&gt; 2\" \"22\" \"&gt;&gt; 3\"])\n</code></pre>"},{"location":"extensions/codehilite/#diff","title":"Diff","text":"<pre><code>Index: grunt.js\n===================================================================\n--- grunt.js    (revision 31200)\n+++ grunt.js    (working copy)\n@@ -12,6 +12,7 @@\n\nmodule.exports = function (grunt) {\n\n+  console.log('hello world');\n  // Project configuration.\n   grunt.initConfig({\n     lint: {\n@@ -19,10 +20,6 @@\n        'packages/services.web/{!(test)/**/,}*.js',\n         'packages/error/**/*.js'\n       ],\n-      scripts: [\n-        'grunt.js',\n-        'db/**/*.js'\n-      ],\n      browser: [\n         'packages/web/server.js',\n         'packages/web/server/**/*.js',\n</code></pre>"},{"location":"extensions/codehilite/#docker","title":"Docker","text":"<pre><code>FROM ubuntu\n\n# Install vnc, xvfb in order to create a 'fake' display and firefox\nRUN apt-get update &amp;&amp; apt-get install -y x11vnc xvfb firefox\nRUN mkdir ~/.vnc\n\n# Setup a password\nRUN x11vnc -storepasswd 1234 ~/.vnc/passwd\n\n# Autostart firefox (might not be the best way, but it does the trick)\nRUN bash -c 'echo \"firefox\" &gt;&gt; /.bashrc'\n\nEXPOSE 5900\nCMD [\"x11vnc\", \"-forever\", \"-usepw\", \"-create\"]\n</code></pre>"},{"location":"extensions/codehilite/#elixir","title":"Elixir","text":"<pre><code>require Logger\n\ndef accept(port) do\n{:ok, socket} = :gen_tcp.listen(port,\n[:binary, packet: :line, active: false, reuseaddr: true])\nLogger.info \"Accepting connections on port #{port}\"\nloop_acceptor(socket)\nend\n\ndefp loop_acceptor(socket) do\n{:ok, client} = :gen_tcp.accept(socket)\nserve(client)\nloop_acceptor(socket)\nend\n\ndefp serve(socket) do\nsocket\n|&gt; read_line()\n|&gt; write_line(socket)\n\nserve(socket)\nend\n\ndefp read_line(socket) do\n{:ok, data} = :gen_tcp.recv(socket, 0)\ndata\nend\n\ndefp write_line(line, socket) do\n:gen_tcp.send(socket, line)\nend\n</code></pre>"},{"location":"extensions/codehilite/#erlang","title":"Erlang","text":"<pre><code>circular(Defs) -&gt;\n[ { { Type, Base }, Fields } ||\n{ { Type, Base }, Fields } &lt;- Defs, Type == msg, circular(Base, Defs) ].\n\ncircular(Base, Defs) -&gt;\nFields = proplists:get_value({ msg, Base }, Defs),\ncircular(Defs, Fields, [Base]).\n\ncircular(_Defs, [], _Path) -&gt;\nfalse;\ncircular(Defs, [Field | Fields], Path) -&gt;\ncase Field#field.type of\n{ msg, Type } -&gt;\ncase lists:member(Type, Path) of\nfalse -&gt;\nChildren = proplists:get_value({ msg, Type }, Defs),\ncase circular(Defs, Children, [Type | Path]) of\nfalse -&gt; circular(Defs, Fields, Path);\ntrue  -&gt; true\nend;\ntrue -&gt;\nType == lists:last(Path) andalso\n(length(Path) == 1 orelse not is_tree(Path))\nend;\n_ -&gt;\ncircular(Defs, Fields, Path)\nend.\n</code></pre>"},{"location":"extensions/codehilite/#f","title":"F#","text":"<pre><code>/// Asynchronously download retangles from the server\n/// and decode the JSON format to F# Rectangle record\nlet [&lt;Js&gt;] getRectangles () : Async&lt;Rectangle[]&gt; = async {\nlet req = XMLHttpRequest()\nreq.Open(\"POST\", \"/get\", true)\nlet! resp = req.AsyncSend()\nreturn JSON.parse(resp) }\n\n/// Repeatedly update rectangles after 0.5 sec\nlet [&lt;Js&gt;] updateLoop () = async {\nwhile true do\ndo! Async.Sleep(500)\nlet! rects = getRectangles()\ncleanRectangles()\nrects |&gt; Array.iter createRectangle }\n</code></pre>"},{"location":"extensions/codehilite/#go","title":"Go","text":"<pre><code>package main\n\nimport \"fmt\"\n\nfunc counter(id int, channel chan int, closer bool) {\nfor i := 0; i &lt; 10000000; i++ {\nfmt.Println(\"process\", id,\" send\", i)\nchannel &lt;- 1\n}\nif closer { close(channel ) }\n}\n\nfunc main() {\nchannel := make(chan int)\ngo counter(1, channel, false)\ngo counter(2, channel, true)\n\nx := 0\n\n// receiving data from channel\nfor i := range channel {\nfmt.Println(\"receiving\")\nx += i\n}\n\nfmt.Println(x)\n}\n</code></pre>"},{"location":"extensions/codehilite/#html","title":"HTML","text":"<pre><code>&lt;!doctype html&gt;\n&lt;html class=\"no-js\" lang=\"\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;\n    &lt;title&gt;HTML5 Boilerplate&lt;/title&gt;\n    &lt;meta name=\"description\" content=\"\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n\n    &lt;link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/normalize.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/main.css\"&gt;\n    &lt;script src=\"js/vendor/modernizr-2.8.3.min.js\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello world! This is HTML5 Boilerplate.&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"extensions/codehilite/#java","title":"Java","text":"<pre><code>import java.util.LinkedList;\nimport java.lang.reflect.Array;\n\npublic class UnsortedHashSet&lt;E&gt; {\n\nprivate static final double LOAD_FACTOR_LIMIT = 0.7;\n\nprivate int size;\nprivate LinkedList&lt;E&gt;[] con;\n\npublic UnsortedHashSet() {\ncon  = (LinkedList&lt;E&gt;[])(new LinkedList[10]);\n}\n\npublic boolean add(E obj) {\nint oldSize = size;\nint index = Math.abs(obj.hashCode()) % con.length;\nif (con[index] == null)\ncon[index] = new LinkedList&lt;E&gt;();\nif (!con[index].contains(obj)) {\ncon[index].add(obj);\nsize++;\n}\nif (1.0 * size / con.length &gt; LOAD_FACTOR_LIMIT)\nresize();\nreturn oldSize != size;\n}\n\nprivate void resize() {\nUnsortedHashSet&lt;E&gt; temp = new UnsortedHashSet&lt;E&gt;();\ntemp.con = (LinkedList&lt;E&gt;[])(new LinkedList[con.length * 2 + 1]);\nfor (int i = 0; i &lt; con.length; i++) {\nif (con[i] != null)\nfor (E e : con[i])\ntemp.add(e);\n}\ncon = temp.con;\n}\n\npublic int size() {\nreturn size;\n}\n}\n</code></pre>"},{"location":"extensions/codehilite/#javascript","title":"JavaScript","text":"<pre><code>var Math = require('lib/math');\n\nvar _extends = function (target) {\nfor (var i = 1; i &lt; arguments.length; i++) {\nvar source = arguments[i];\nfor (var key in source) {\ntarget[key] = source[key];\n}\n}\n\nreturn target;\n};\n\nvar e = exports.e = 2.71828182846;\nexports['default'] = function (x) {\nreturn Math.exp(x);\n};\n\nmodule.exports = _extends(exports['default'], exports);\n</code></pre>"},{"location":"extensions/codehilite/#json","title":"JSON","text":"<pre><code>{\n\"name\": \"mkdocs-material\",\n\"version\": \"0.2.4\",\n\"description\": \"A Material Design theme for MkDocs\",\n\"homepage\": \"http://squidfunk.github.io/mkdocs-material/\",\n\"authors\": [\n\"squidfunk &lt;martin.donath@squidfunk.com&gt;\"\n],\n\"license\": \"MIT\",\n\"main\": \"Gulpfile.js\",\n\"scripts\": {\n\"start\": \"./node_modules/.bin/gulp watch --mkdocs\",\n\"build\": \"./node_modules/.bin/gulp build --production\"\n}\n...\n}\n</code></pre>"},{"location":"extensions/codehilite/#julia","title":"Julia","text":"<pre><code>using MXNet\n\nmlp = @mx.chain mx.Variable(:data)             =&gt;\nmx.FullyConnected(name=:fc1, num_hidden=128) =&gt;\nmx.Activation(name=:relu1, act_type=:relu)   =&gt;\nmx.FullyConnected(name=:fc2, num_hidden=64)  =&gt;\nmx.Activation(name=:relu2, act_type=:relu)   =&gt;\nmx.FullyConnected(name=:fc3, num_hidden=10)  =&gt;\nmx.SoftmaxOutput(name=:softmax)\n\n# data provider\nbatch_size = 100\ninclude(Pkg.dir(\"MXNet\", \"examples\", \"mnist\", \"mnist-data.jl\"))\ntrain_provider, eval_provider = get_mnist_providers(batch_size)\n\n# setup model\nmodel = mx.FeedForward(mlp, context=mx.cpu())\n\n# optimization algorithm\noptimizer = mx.SGD(lr=0.1, momentum=0.9)\n\n# fit parameters\nmx.fit(model, optimizer, train_provider, n_epoch=20, eval_data=eval_provider)\n</code></pre>"},{"location":"extensions/codehilite/#lua","title":"Lua","text":"<pre><code>local ffi = require(\"ffi\")\n\nffi.cdef[[\n  void Sleep(int ms);\n  int poll(struct pollfd *fds, unsigned long nfds, int timeout);\n]]\n\nlocal sleep\nif ffi.os == \"Windows\" then\n  function sleep(s)\n    ffi.C.Sleep(s*1000)\n  end\nelse\n  function sleep(s)\n    ffi.C.poll(nil, 0, s * 1000)\n  end\nend\n\nfor i = 1,160 do\n  io.write(\".\"); io.flush()\n  sleep(0.01)\nend\nio.write(\"\\n\")\n</code></pre>"},{"location":"extensions/codehilite/#mysql","title":"MySQL","text":"<pre><code>SELECT\nEmployees.EmployeeID,\nEmployees.Name,\nEmployees.Salary,\nManager.Name AS Manager\nFROM\nEmployees\nLEFT JOIN\nEmployees AS Manager\nON\nEmployees.ManagerID = Manager.EmployeeID\nWHERE\nEmployees.EmployeeID = '087652';\n</code></pre>"},{"location":"extensions/codehilite/#php","title":"PHP","text":"<pre><code>&lt;?php\n\n// src/AppBundle/Controller/LuckyController.php\nnamespace AppBundle\\Controller;\n\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass LuckyController {\n\n  /**\n   * @Route(\"/lucky/number\")\n   */\n  public function numberAction() {\n    $number = mt_rand(0, 100);\n\n    return new Response(\n      '&lt;html&gt;&lt;body&gt;Lucky number: '.$number.'&lt;/body&gt;&lt;/html&gt;'\n    );\n  }\n}\n</code></pre>"},{"location":"extensions/codehilite/#protocol-buffers","title":"Protocol Buffers","text":"<pre><code>syntax = \"proto2\";\n\npackage caffe;\n\n// Specifies the shape (dimensions) of a Blob.\nmessage BlobShape {\nrepeated int64 dim = 1 [packed = true];\n}\n\nmessage BlobProto {\noptional BlobShape shape = 7;\nrepeated float data = 5 [packed = true];\nrepeated float diff = 6 [packed = true];\n\n// 4D dimensions -- deprecated.  Use \"shape\" instead.\noptional int32 num = 1 [default = 0];\noptional int32 channels = 2 [default = 0];\noptional int32 height = 3 [default = 0];\noptional int32 width = 4 [default = 0];\n}\n</code></pre>"},{"location":"extensions/codehilite/#python","title":"Python","text":"<pre><code>\"\"\"\n  A very simple MNIST classifier.\n  See extensive documentation at\n  http://tensorflow.org/tutorials/mnist/beginners/index.md\n\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\n# Import data\nfrom tensorflow.examples.tutorials.mnist import input_data\n\nimport tensorflow as tf\n\nflags = tf.app.flags\nFLAGS = flags.FLAGS\nflags.DEFINE_string('data_dir', '/tmp/data/', 'Directory for storing data')\n\nmnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True)\n\nsess = tf.InteractiveSession()\n\n# Create the model\nx = tf.placeholder(tf.float32, [None, 784])\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\ny = tf.nn.softmax(tf.matmul(x, W) + b)\n</code></pre>"},{"location":"extensions/codehilite/#ruby","title":"Ruby","text":"<pre><code>require 'finity/event'\nrequire 'finity/machine'\nrequire 'finity/state'\nrequire 'finity/transition'\nrequire 'finity/version'\n\nmodule Finity\nclass InvalidCallback &lt; StandardError; end\nclass MissingCallback &lt; StandardError; end\nclass InvalidState    &lt; StandardError; end\n\n# Class methods to be injected into the including class upon inclusion.\nmodule ClassMethods\n\n# Instantiate a new state machine for the including class by accepting a\n# block with state and event (and subsequent transition) definitions.\ndef finity options = {}, &amp;block\n@finity ||= Machine.new self, options, &amp;block\nend\n\n# Return the names of all registered states.\ndef states\n@finity.states.map { |name, _| name }\nend\n\n# Return the names of all registered events.\ndef events\n@finity.events.map { |name, _| name }\nend\nend\n\n# Inject methods into the including class upon inclusion.\ndef self.included base\nbase.extend ClassMethods\nend\nend\n</code></pre>"},{"location":"extensions/codehilite/#xml","title":"XML","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]&gt;\n&lt;?oxygen RNGSchema=\"some.rng\" type=\"xml\"?&gt;\n&lt;xs:main-Tag xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n&lt;!-- This is a sample comment --&gt;\n&lt;childTag attribute=\"Quoted Value\" another-attribute='Single quoted value'\na-third-attribute='123'&gt;\n&lt;withTextContent&gt;Some text content&lt;/withTextContent&gt;\n&lt;withEntityContent&gt;Some text content with &amp;lt;entities&amp;gt; and\n      mentioning uint8_t and int32_t&lt;/withEntityContent&gt;\n&lt;otherTag attribute='Single quoted Value'/&gt;\n&lt;/childTag&gt;\n&lt;![CDATA[ some CData ]]&gt;\n&lt;/main-Tag&gt;\n</code></pre>"},{"location":"extensions/footnotes/","title":"Fu\u00dfnoten","text":"<p>Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation.</p>"},{"location":"extensions/footnotes/#installation","title":"Installation","text":"<p>Add the following lines to your <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n- footnotes\n</code></pre>"},{"location":"extensions/footnotes/#usage","title":"Usage","text":"<p>The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document.</p>"},{"location":"extensions/footnotes/#inserting-the-reference","title":"Inserting the reference","text":"<p>The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, \u2026] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers.</p> <p>Example:</p> <pre><code>Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n</code></pre> <p>Result:</p> <p>Lorem ipsum1 dolor sit amet, consectetur adipiscing elit.2</p>"},{"location":"extensions/footnotes/#inserting-the-content","title":"Inserting the content","text":"<p>The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference.</p>"},{"location":"extensions/footnotes/#on-a-single-line","title":"on a single line","text":"<p>Short statements can be written on the same line.</p> <p>Example:</p> <pre><code>[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n</code></pre> <p>Result:</p> <p>Jump to footnote at the bottom of the page</p>"},{"location":"extensions/footnotes/#on-multiple-lines","title":"on multiple lines","text":"<p>Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces.</p> <p>Example:</p> <pre><code>[^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Result:</p> <p>Jump to footnote at the bottom of the page</p> <ol> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0\u21a9</p> </li> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod   nulla. Curabitur feugiat, tortor non consequat finibus, justo purus   auctor massa, nec semper lorem quam in massa.\u00a0\u21a9</p> </li> </ol>"},{"location":"extensions/metadata/","title":"Metadaten","text":"<p>The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context.</p>"},{"location":"extensions/metadata/#installation","title":"Installation","text":"<p>Add the following lines to your <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n- meta\n</code></pre>"},{"location":"extensions/metadata/#usage","title":"Usage","text":"<p>Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme.</p> <p>Example:</p> <pre><code>title: Lorem ipsum dolor sit amet\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\npath: path/to/file\nsource: file.js\n\n# Headline\n\n...\n</code></pre> <p>See the next section which covers the metadata that is supported by Material.</p>"},{"location":"extensions/metadata/#overriding-the-title","title":"Overriding the title","text":"<p>The page title can be overridden on a per-document level:</p> <pre><code>title: Lorem ipsum dolor sit amet\n</code></pre> <p>This will set the <code>title</code> tag inside the document <code>head</code> for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title.</p>"},{"location":"extensions/metadata/#overriding-the-description","title":"Overriding the description","text":"<p>The page description can also be overridden on a per-document level:</p> <pre><code>description: Nullam urna elit, malesuada eget finibus ut, ac tortor.\n</code></pre> <p>This will set the <code>meta</code> tag containing the site description inside the document <code>head</code> for the current page to the provided value.</p>"},{"location":"extensions/metadata/#linking-sources","title":"Linking sources","text":"<p>When a document is related to a specific set of source files and the <code>repo_url</code> is defined inside the project\u2019s <code>mkdocs.yml</code>, the files can be linked using the <code>source</code> key:</p> <pre><code>source: file.js\n</code></pre> <p>A new entry at the bottom of the table of contents is generated that is linking to the section listing the linked source files. Multiple files can be linked by adding filenames on separate lines:</p> <pre><code>source: file.js\n        file.css\n</code></pre> <p>The filenames are appended to the <code>repo_url</code> set in your <code>mkdocs.yml</code>, but can be prefixed with a <code>path</code> to ensure correct path resolving:</p> <p>Example:</p> <pre><code>path: tree/master/docs/extensions\nsource: metadata.md\n</code></pre> <p>Result:</p> <p>See the source section for the resulting output.</p>"},{"location":"extensions/permalinks/","title":"Permalinks","text":"<p>Permalinks sind ein Feature der Table of Contents Erweiterung, die ein Bestandteil der Standard Markdown Bibliothek ist. Die Erweiterung f\u00fcgt einen Anker an das Ende jeder Headline ein, was es m\u00f6glich macht direkt auf einen bestimmten Absatz einer Seite zu verlinken.</p>"},{"location":"extensions/permalinks/#installation","title":"Installation","text":"<p>Um Permalinks zu aktivieren, f\u00fcge diese Zeilen der <code>mkdocs.yml</code> hinzu:</p> <pre><code>markdown_extensions:\n- toc(permalink=true)\n</code></pre> <p>Dadurch wird ein Link mit diesem Symbol <code>\u00b6</code> an das Ende jeder Headline hinzugef\u00fcgt. (So wie es hier auf dieser Seite zu sehen ist)</p> <p>Um den Text der Permalinks zu \u00e4ndern, muss der Konfiguration ein Text hinzugef\u00fcgt werden, z.B.:</p> <pre><code>markdown_extensions:\n  - toc(permalink=Link)\n</code></pre>"},{"location":"extensions/permalinks/#anwendung","title":"Anwendung","text":"<p>Wenn die Erweiterung aktiviert ist, werden Permalinks automatisch hinzugef\u00fcgt.</p>"},{"location":"extensions/pymdown/","title":"PyMdown Extensions","text":"<p>PyMdown Extensions is a collection of Markdown extensions that add some great features to the standard Markdown library. For this reason, the installation of this package is highly recommended as it\u2019s well-integrated with the Material theme.</p>"},{"location":"extensions/pymdown/#installation","title":"Installation","text":"<p>The PyMdown Extensions package can be installed with the following command:</p> <pre><code>pip install pymdown-extensions\n</code></pre> <p>The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with the Material theme:</p> <pre><code>markdown_extensions:\n- pymdownx.arithmatex\n- pymdownx.betterem(smart_enable=all)\n- pymdownx.caret\n- pymdownx.critic\n- pymdownx.emoji:\nemoji_generator: !!python/name:pymdownx.emoji.to_svg\n- pymdownx.inlinehilite\n- pymdownx.magiclink\n- pymdownx.mark\n- pymdownx.smartsymbols\n- pymdownx.superfences\n- pymdownx.tasklist(custom_checkbox=true)\n- pymdownx.tilde\n</code></pre>"},{"location":"extensions/pymdown/#usage","title":"Usage","text":""},{"location":"extensions/pymdown/#github-flavored-markdown","title":"GitHub Flavored Markdown","text":"<p>Most of the extensions included in the PyMdown Extensions package try to bring the Markdown experience closer to GitHub Flavored Markdown (GFM).</p> <p>The PyMdown Extensions package adds a shorthand to enable all of the included extensions that provide the GFM experience. However, usage of the shorthand is discouraged, because some extensions are not supported, as the Material theme uses some incompatible extensions included in the standard Markdown library.</p>"},{"location":"extensions/pymdown/#betterem","title":"BetterEm","text":"<p>BetterEm improves the handling of emphasis markup (bold and italic) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes.</p>"},{"location":"extensions/pymdown/#emoji","title":"Emoji","text":"<p>Emoji adds the ability to insert a :shit:-load of emojis that we use in our daily lives. See the EmojiOne demo for a list of all available emojis. Happy scrolling :tada:</p> <p>Legal disclaimer</p> <p>Material has no affiliation with EmojiOne which is released under CC BY 4.0. When including EmojiOne images or CSS, please read the EmojiOne license to ensure proper usage and attribution.</p>"},{"location":"extensions/pymdown/#magiclink","title":"MagicLink","text":"<p>MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links <code>http[s]://</code> and <code>ftp://</code> links, as well as references to email addresses:</p>"},{"location":"extensions/pymdown/#superfences","title":"SuperFences","text":"<p>SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn\u2019t parse correctly.</p>"},{"location":"extensions/pymdown/#tasklist","title":"Tasklist","text":"<p>Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with <code>[ ]</code> for empty or <code>[x]</code> for filled checkboxes.</p> <p>Example:</p> <pre><code>* [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n* [x] Nulla lobortis egestas semper\n* [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n* [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n    * [ ] Praesent sed risus massa\n* [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n* [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n</code></pre> <p>Result:</p> <ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Nulla lobortis egestas semper</li> <li> Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Sed egestas felis quis elit dapibus, ac aliquet turpis mattis</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> <li> Nulla vel eros venenatis, imperdiet enim id, faucibus nisi</li> </ul>"},{"location":"extensions/pymdown/#tilde","title":"Tilde","text":"<p>Tilde provides an easy way to strike through cross out\u00a0text. The portion of text that should be erased must be enclosed in two tildes <code>~~...~~</code> and the extension will take care of the rest.</p>"},{"location":"extensions/pymdown/#more-syntactic-sugar","title":"More syntactic sugar","text":""},{"location":"extensions/pymdown/#caret","title":"Caret","text":"<p>Caret is the sister extension of Tilde and makes it possible to highlight inserted text. The portion of text that should be marked as added must be enclosed in two carets <code>^^...^^</code>.</p>"},{"location":"extensions/pymdown/#mark","title":"Mark","text":"<p>Mark adds the ability to highlight text like it was marked with a yellow text marker. The portion of text that should be highlighted must be enclosed in two equal signs <code>==...==</code>.</p>"},{"location":"extensions/pymdown/#smartsymbols","title":"SmartSymbols","text":"<p>SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright symbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, \u2026).</p>"},{"location":"extensions/pymdown/#critic","title":"Critic","text":"<p>Critic implements Critic Markup, a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected.</p> <p>Text can be deleted and replacement text added. This can also be combined into onea single operation. Highlighting is also possible and comments can be added inline.</p> <p>Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.</p>"},{"location":"extensions/pymdown/#arithmatex-mathjax","title":"Arithmatex MathJax","text":"<p>Arithmatex integrates Material with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax.</p> <p>Besides activating the extension in the <code>mkdocs.yml</code>, the MathJax JavaScript runtime needs to be included. This must be done with additional JavaScript:</p> <pre><code>extra_javascript:\n- 'https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML'\n</code></pre> <p>If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime in <code>extra_javascript</code> which contains your MathJax configuration, e.g.:</p> <pre><code>window.MathJax = {\ntex2jax: {\ninlineMath: [ [\"\\\\(\",\"\\\\)\"] ],\ndisplayMath: [ [\"\\\\[\",\"\\\\]\"] ]\n},\nTeX: {\nTagSide: \"right\",\nTagIndent: \".8em\",\nMultLineWidth: \"85%\",\nequationNumbers: {\nautoNumber: \"AMS\",\n},\nunicode: {\nfonts: \"STIXGeneral,'Arial Unicode MS'\"\n}\n},\ndisplayAlign: \"left\",\nshowProcessingMessages: false,\nmessageStyle: \"none\"\n};\n</code></pre> <p>In your <code>mkdocs.yml</code>, include it with:</p> <pre><code>extra_javascript:\n- 'javascripts/extra.js'\n- 'https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML'\n</code></pre>"},{"location":"extensions/pymdown/#blocks","title":"Blocks","text":"<p>Blocks are enclosed in <code>$$...$$</code> which are placed on separate lines.</p> <p>Example:</p> <pre><code>$$\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n$$\n</code></pre> <p>Result:</p>  \\frac{n!}{k!(n-k)!} = \\binom{n}{k}"},{"location":"extensions/pymdown/#inline","title":"Inline","text":"<p>Inline equations need to be enclosed in <code>$...$</code>:</p> <p>Example:</p> <pre><code>Lorem ipsum dolor sit amet: $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$\n</code></pre> <p>Result:</p> <p>Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)}</p>"},{"location":"extensions/pymdown/#inlinehilite","title":"InlineHilite","text":"<p>InlineHilite adds support for inline code highlighting. It\u2019s useful for short snippets included within body copy, e.g. <code>var test = 0;</code> and can be achived by prefixing inline code with a shebang and language identifier, e.g. <code>#!js</code>.</p>"},{"location":"introduction/","title":"Hier gibts die Einf\u00fchrung","text":""},{"location":"introduction/#erstellt-mit-mkdocs-und-dem-mkdocs-material-theme","title":"Erstellt mit MkDocs und dem MkDocs-Material Theme","text":"<p>  Diese Seite wurde erzeugt von MkDocs, einem ausgezeichneten Static Site Generator f\u00fcr Online-Dokumentationen. Das Deisgn verwendet Material for MkDocs.</p> <p>Achtung!</p> <p>Preview for internal use only!</p>"}]}